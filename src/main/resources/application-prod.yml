# ============================================
# Perfil de PRODUCCIÓN
# ============================================

spring:
  # ============================================
  # Base de Datos - PostgreSQL producción
  # ============================================
  datasource:
    url: ${DB_URL}  # Variable de entorno obligatoria
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      maximum-pool-size: ${DB_POOL_SIZE:20}
      minimum-idle: ${DB_MIN_IDLE:10}
      idle-timeout: 600000
      connection-timeout: 30000
      leak-detection-threshold: 60000
      max-lifetime: 1800000

  # ============================================
  # JPA/Hibernate - Configuración producción
  # ============================================
  jpa:
    hibernate:
      ddl-auto: validate  # Solo validar, no modificar esquema
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 25
        order_inserts: true
        order_updates: true
        connection:
          provider_disables_autocommit: true
        query:
          in_clause_parameter_padding: true
    show-sql: false
    open-in-view: false

  # ============================================
  # Cache - Configuración de caché
  # ============================================
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=1000,expireAfterWrite=5m

# ============================================
# Servidor - Configuración producción
# ============================================
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false
    whitelabel:
      enabled: false
  forward-headers-strategy: native
  tomcat:
    accesslog:
      enabled: true
      directory: /var/log/acainfo
      pattern: common
    threads:
      max: ${SERVER_MAX_THREADS:200}
      min-spare: ${SERVER_MIN_THREADS:10}

# ============================================
# JWT - Configuración segura
# ============================================
jwt:
  secret: ${JWT_SECRET}  # Variable de entorno obligatoria
  access-token:
    expiration: ${JWT_ACCESS_EXPIRATION:900000}  # 15 minutos
  refresh-token:
    expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 días

# ============================================
# Logging - Configuración producción
# ============================================
logging:
  level:
    root: WARN
    com.acainfo.backend: INFO
    org.springframework: WARN
    org.springframework.security: WARN
    org.hibernate: ERROR
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/acainfo/application.log
  logback:
    rollingpolicy:
      file-name-pattern: /var/log/acainfo/application-%d{yyyy-MM-dd}.%i.log.gz
      max-file-size: 100MB
      max-history: 30
      total-size-cap: 3GB
      clean-history-on-start: false

# ============================================
# Swagger - Deshabilitado en producción
# ============================================
springdoc:
  swagger-ui:
    enabled: false
  api-docs:
    enabled: false

# ============================================
# CORS - Configuración restrictiva
# ============================================
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS}  # Variable de entorno
  allowed-methods:
    - GET
    - POST
    - PUT
    - DELETE
    - OPTIONS
  allowed-headers:
    - Authorization
    - Content-Type
    - X-Requested-With
  exposed-headers:
    - Authorization
    - Content-Type
  allow-credentials: true
  max-age: 86400  # 24 horas

# ============================================
# Actuator - Monitoreo producción
# ============================================
management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus,info
      base-path: /management
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
      probes:
        enabled: true
    metrics:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
      environment: production
  health:
    diskspace:
      enabled: true
      threshold: 10485760  # 10MB
    db:
      enabled: true
    ping:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true

# ============================================
# Seguridad adicional
# ============================================
security:
  require-ssl: true
  headers:
    content-security-policy: "default-src 'self'"
    frame-options: DENY
    xss-protection: "1; mode=block"
    content-type-options: nosniff

# ============================================
# Rate Limiting
# ============================================
rate-limiting:
  enabled: true
  requests-per-minute: 60
  requests-per-hour: 1000

# ============================================
# Configuración de aplicación
# ============================================
app:
  init-data:
    enabled: false  # No cargar datos de prueba
  monitoring:
    enabled: true
  notifications:
    enabled: true
  scheduled-tasks:
    enabled: true